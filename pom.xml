<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>io.prospace</groupId>
	<artifactId>galaxy-merchant</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>galaxy-merchant</name>
	<description>Intergalactic marketplace. Prospace backend challenge</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<frontend-src-dir>${project.basedir}/src/main/js/app</frontend-src-dir>
		<node.version>v12.3.1</node.version>
		<npm.version>2.15.9</npm.version>
		<frontend-maven-plugin.version>1.7.6</frontend-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.8</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<doctype>book</doctype>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
						<version>${spring-restdocs.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- tag::frontend-maven-plugin[] -->
			<plugin>
			 	<groupId>com.github.eirslett</groupId>
        		<artifactId>frontend-maven-plugin</artifactId>
			    <executions>
			        
			        <execution>
			            <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
			            <id>install node and npm</id>
			            <goals>
			                <goal>install-node-and-npm</goal>
			            </goals>
			            <!-- optional: default phase is "generate-resources" -->
			            <phase>generate-resources</phase>
			        </execution>
			        
			        <execution>
			            <id>npm install</id>
			            <goals>
			              <goal>npm</goal>
			            </goals>
			            <!-- Optional configuration which provides for running any npm command -->
			            <configuration>
			              <arguments>install</arguments>
			            </configuration>
			          </execution>
			
			          <execution>
						    <id>webpack build</id>
						    <goals>
						        <goal>webpack</goal>
						    </goals>
						
						    <!-- optional: the default phase is "generate-resources" -->
						    <phase>generate-resources</phase>
					  </execution>
			    </executions>
			    <configuration>
			        <nodeVersion>${node.version}</nodeVersion>
			
			        <!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
			        <npmVersion>${npm.version}</npmVersion>
			    </configuration>
			</plugin>
			<!-- end::frontend-maven-plugin[] -->
		</plugins>
	</build>

</project>
